"""
Classifies: CHEBI:25029 leukotriene
"""
"""
Classifies: leukotriene
"""
from rdkit import Chem
from rdkit.Chem import rdMolDescriptors

def is_leukotriene(smiles: str):
    """
    Determines if a molecule is a leukotriene based on its SMILES string.
    A leukotriene is a C20 polyunsaturated fatty acid derivative with four double bonds,
    of which three are conjugated (alternating double and single bonds).

    Args:
        smiles (str): SMILES string of the molecule

    Returns:
        bool: True if molecule is a leukotriene, False otherwise
        str: Reason for classification
    """
    # Parse SMILES
    mol = Chem.MolFromSmiles(smiles)
    if mol is None:
        return False, "Invalid SMILES string"

    # Count the number of carbon atoms
    c_count = sum(1 for atom in mol.GetAtoms() if atom.GetAtomicNum() == 6)
    if c_count != 20:
        return False, f"Molecule has {c_count} carbon atoms, expected 20 for leukotriene"

    # Identify double bonds
    double_bonds = [bond for bond in mol.GetBonds() if bond.GetBondType() == Chem.rdchem.BondType.DOUBLE]
    if len(double_bonds) != 4:
        return False, f"Molecule has {len(double_bonds)} double bonds, expected 4 for leukotriene"

    # Check for three conjugated double bonds
    # Create a pattern for three conjugated double bonds (alternating single and double bonds)
    conjugated_triene_pattern = Chem.MolFromSmarts('C=CC=CC=C')
    conjugated_matches = mol.GetSubstructMatches(conjugated_triene_pattern)
    if len(conjugated_matches) == 0:
        return False, "No conjugated triene (three conjugated double bonds) found"

    # Check for polyunsaturated fatty acid chain
    # Identify if the molecule has a long hydrocarbon chain
    chain_length = rdMolDescriptors.CalcNumAliphaticCarbocycles(mol)
    if chain_length > 0:
        return False, "Molecule contains rings, expected linear chain for leukotriene"

    # Check for functional groups common in leukotrienes (optional)
    # For simplicity, we'll skip this step as leukotrienes can have various functional groups

    return True, "Molecule matches criteria for a leukotriene"

__metadata__ = {   'chemical_class': {   'id': 'LEUKOTRIENE',
                              'name': 'leukotriene',
                              'definition': 'Any icosanoid from that family of C20 polyunsaturated fatty acids and their derivatives generated by leukocytes from arachidonic acid, each member having four double bonds of which three are conjugated.',
                              'parents': ['ICOSANOID', 'FATTY_ACID_DERIVATIVE']},
        'config': {   'llm_model_name': 'lbl/claude-sonnet',
                      'f1_threshold': 0.8,
                      'max_attempts': 5,
                      'max_positive_instances': None,
                      'max_positive_to_test': None,
                      'max_negative_to_test': None,
                      'max_positive_in_prompt': 50,
                      'max_negative_in_prompt': 20,
                      'max_instances_in_prompt': 100,
                      'test_proportion': 0.1},
        'message': None,
        'attempt': 0,
        'success': True,
        'best': True,
        'error': '',
        'stdout': None,
        'num_true_positives': None,
        'num_false_positives': None,
        'num_true_negatives': None,
        'num_false_negatives': None,
        'num_negatives': None,
        'precision': None,
        'recall': None,
        'f1': None,
        'accuracy': None}