"""
Classifies: CHEBI:48039 dihydroflavonols
"""
"""
Classifies: dihydroflavonols
"""
from rdkit import Chem

def is_dihydroflavonols(smiles: str):
    """
    Determines if a molecule is a dihydroflavonol based on its SMILES string.
    A dihydroflavonol is defined as any hydroxyflavanone in which a hydroxy group is present at position 3 of the heterocyclic ring.

    Args:
        smiles (str): SMILES string of the molecule

    Returns:
        bool: True if molecule is a dihydroflavonol, False otherwise
        str: Reason for classification
    """
    # Parse the SMILES string into an RDKit molecule
    mol = Chem.MolFromSmiles(smiles)
    if mol is None:
        return False, "Invalid SMILES string"

    # Define the dihydroflavonol core SMARTS pattern
    # Representing a chroman-4-one ring with a hydroxy group at position 3
    dihydroflavonol_smarts = """
    [#6]-1(-[#8])-[#6](=O)-[#6](-[#8])-c2ccccc-1-2
    """
    # Remove whitespace and newlines from SMARTS string
    dihydroflavonol_smarts = ''.join(dihydroflavonol_smarts.split())
    dihydroflavonol_pattern = Chem.MolFromSmarts(dihydroflavonol_smarts)
    if dihydroflavonol_pattern is None:
        return False, "Invalid dihydroflavonol SMARTS pattern"

    # Check if the molecule contains the dihydroflavonol core
    matches = mol.GetSubstructMatches(dihydroflavonol_pattern)
    if not matches:
        return False, "Molecule does not contain the dihydroflavonol core structure"

    return True, "Molecule is a dihydroflavonol"

__metadata__ = {
    'chemical_class': {
        'name': 'dihydroflavonols',
        'definition': 'Any hydroxyflavanone in which a hydroxy group is present at position 3 of the heterocyclic ring.',
        'example_smiles': [
            'O1C(C(O)C(=O)C2=C1C=C(O)C=C2)C3=CC=C(O)C=C3',
            'COC1=C(O)C=CC(=C1)[C@H]1OC2=CC(O)=CC(O)=C2C(=O)[C@@H]1O',
            'O[C@@H]1[C@H](Oc2cc(O)ccc2C1=O)c1ccc(O)cc1',
            'O[C@@H]1[C@H](Oc2cc(O)cc(O)c2C1=O)c1cc(O)c(O)c(O)c1',
            'Cc1c(O)c(C)c2O[C@H]([C@H](O)C(=O)c2c1O)c1ccccc1',
            'O1[C@H]([C@H](O)C(=O)C=2C1=CC(O)=CC2O)C3=CC=C(O)C=C3',
            'O1C(C(O)C(=O)C=2C1=CC=3OCOC3C2O)C4=CC=CC=C4'
        ],
    },
    'source': 'Generated by assistant',
    'date': '2023-10-05'
}